#!/bin/bash
# 2082809 Jeroen Jetrax t6 van Beuningen
# 2139192 Burak (krakatoa) Imre
# Duper
#=======================================
start_time=$(date)
amount_deleted=0
del_dup=false
file_array=()
#exclude_dir=()
exclude_file=()
#=======================================
RED='\033[0;31m'
NC='\033[0m'

while getopts ":rx:Xl:" VALUE "$@"; do
	# om gevonden duplicaten direct te laten verwijderen;
	if [ $VALUE = "r" ] ; then
		if [ "$del_dup" = false ]; then
			echo -e "[ ${RED}DELETE DUPLICATE MODE ${NC}]"
			del_dup=true
		fi
	fi
	# <naam> om een file op te geven die buiten beschouwing gelaten moet worden bij het zoeken naar duplicaten. 
	# (mag meerdere keren worden gebruikt, elke uit te sluiten file moet met een aparte -x genoemd worden; geen wildcards gebruiken zoals *);
	if [ $VALUE = "x" ] ; then
		exclude_file+=("$OPTARG")
	fi
	#Voeg een optie -X <filename> toe (hoofdletter X), met als argument een configuratie file waarin alle te excluden files en/of directories staan opgesomd, één per regel. 
	#Dat is dus een alternatief voor het meerdere malen gebruiken van de -x optie (kleine x).
	if [ $VALUE = "X" ] ; then	
		#extra
		exit 1
	fi
	# optie -l <landcode> om een landcode in 2 letters mee te geven, waarmee de taal van de meldingen kan worden ingesteld. 
	# Om dat te bouwen kun je voor alle meldingen shell variabelen definiëren, die je voor elke taal in een bestand zet. 
	# Dan kun je het juiste taalbestand laden met behulp van het source-mechanisme.
	if [ $VALUE = "l" ] ; then
		echo "language: $OPTARG"
		
		if [ ! -d "./lang" ] ; then
			echo "directory 'lang' does not exsist!"
		elif [ ! -f "./lang/$OPTARG.sh" ] ; then
			echo "Language '$OPTARG' file not found!"
		else 
			source "./lang/$OPTARG.sh"
		fi
	fi
	#er zijn opties meegegeven die je niet geïmplementeerd hebt, druk dan een usage string af;
	if [ $VALUE = "?" ] ; then
		echo "Unknown flag -$OPTARG detected."
        echo "Usage: $0 [-r] [-x filename] [-l landcode] [directory]"
	fi
done

#echo $exclude_file

#de start-directory bestaat niet, is geen directory, of mag niet gelezen worden.
shift $(($OPTIND - 1))

if [ -d "$1" ] ; then
	if [ ${#exclude_file[@]} -ne 0 ] ; then
		for item in "${exclude_file[@]}"
			do
				exclude_array+=( "$(find $1 -name $item)" )
			done
	fi

	#Alleen bestanden in opgegeven start-directory (inclusief onderliggende directories) worden bekeken
	while read fileName ; do
		for item in $(find $1 -type f -exec sha1sum "{}" \; | grep "$fileName" | tail -n +2 | awk '{print $2}')
		do
			file_array+=("$item")
		done
	done <<< $(find $1 -type f | sed 's_.*/__' | sort | uniq -d)
	
		if [ ${#exclude_file[@]} -ne 0 ] ; then
			echo ""
		fi
		echo "$exclude_file"
		if [ "$del_dup" = true ] ; then
			for i in "${file_array[@]}"
			do
				rm $i
			done
		fi

elif [ ! -d "$1" ] ; then
	echo "${LANG_DirDNE:-directory 'val' does not exsist}"
elif [ ! -r "$1" ] ; then
	echo "${LANG_DirINR:-directory is not readable}"
fi

#Het script maakt een directory ~/var en voegt regels aan een log file toe 
#(duper.log) waarin diverse zaken omtrent het proces worden opgeslagen, zoals bijvoorbeeld: start-tijd eind-tijd aantal gevonden en verwijderde duplicaten
mkdir -p ~/var
printf "start time:\t$start_time \nend time:\t$(date) \namount deleted:\t$amount_deleted \n\n" >> ~/var/log.txt

exit $?
